{"version":3,"file":"static/js/637.e9971b3b.chunk.js","mappings":"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","sources":["components/@extended/AnimateButton.js","components/@extended/CustomButton.js","components/table/CustomTable.js","pages/dashboard/allBooking.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// third-party\nimport { motion } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nexport default function AnimateButton({ children, type }) {\n    switch (type) {\n        case 'rotate': // only available in paid version\n        case 'slide': // only available in paid version\n        case 'scale': // only available in paid version\n        default:\n            return (\n                <motion.div whileHover={{ scale: 1 }} whileTap={{ scale: 0.9 }}>\n                    {children}\n                </motion.div>\n            );\n    }\n}\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate'])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale'\n};\n","import { Box } from \"@mui/material\";\n\nimport { LoadingButton } from \"@mui/lab\";\nimport AnimateButton from \"./AnimateButton\";\n\nconst CustomButton = ({ fullWidth, type, title, loading }) => {\n  return (\n    <Box sx={{ mt: 2 }}>\n      <AnimateButton>\n        <LoadingButton\n          fullWidth={fullWidth}\n          loadingPosition=\"center\"\n          disableElevation\n          size=\"large\"\n          type={type}\n          variant=\"contained\"\n        >\n          {title}\n        </LoadingButton>\n      </AnimateButton>\n    </Box>\n  );\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\nconst CustomTable = ({ columns, rows }) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    <>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader striped aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default CustomTable;\n","import { useState, useEffect } from \"react\";\n// material-ui\n\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { Link } from \"react-router-dom\";\n\n// project imports\n\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport CustomButton from \"components/@extended/CustomButton\";\n\n// navigation\nimport { useNavigate } from \"react-router\";\nimport CustomTable from \"components/table/CustomTable\";\n\nconst AllBooking = ({ ...others }) => {\n  const navigate = useNavigate();\n\n  // states\n  const [showData, setShowData] = useState(null);\n\n  const getAllBookings = async () => {\n    const options = {\n      headers: { \"content-type\": \"application/json\" },\n    };\n    await axios\n      .get(process.env.REACT_APP_SERVER_URL+\"/api/v1/booking/getAll\", options)\n      .then((response) => {\n        console.log(\"Server Response\", response.data)\n        return setShowData(response.data);\n      })\n      .catch((err) => console.log(err));\n  };\n  const DateAppointView = (date) => {\n    const isoDate = date;\n    const newDate = moment.utc(isoDate).format(\"lll\");\n    return newDate;\n  };\n\n  useEffect(() => {\n    getAllBookings();\n  }, []);\n\n  const columns = [\n    { id: \"id\", label: \"ID\", minWidth: 120 },\n    { id: \"firstName\", label: \"First Name\", minWidth: 170, align: \"center\" },\n    { id: \"surName\", label: \"Sur Name\", minWidth: 170, align: \"center\" },\n\n    {\n      id: \"email\",\n      label: \"Email\",\n      minWidth: 170,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n    {\n      id: \"phone\",\n      label: \"Phone\",\n      minWidth: 170,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n    {\n      id: \"arrivalDate\",\n      label: \"Arrival Date\",\n      minWidth: 170,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n    {\n      id: \"numOfNights\",\n      label: \"No Of Nights\",\n      minWidth: 170,\n      align: \"center\",\n      //   format: (value) => console.log(value),\n    },\n\n    {\n      id: \"numOfGuests\",\n      label: \"No Of Guests\",\n      minWidth: 170,\n      align: \"center\",\n      //   format: (value) => console.log(value),\n    },\n    {\n      id: \"notes\",\n      label: \"Notes\",\n      minWidth: 170,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n  ];\n  function createData(\n    id,\n    firstName,\n    surName,\n    email,\n    phone,\n    arrivalDate,\n    numOfNights,\n    numOfGuests,\n    notes\n  ) {\n    return {\n      id,\n      firstName,\n      surName,\n      email,\n      phone,\n      arrivalDate,\n      numOfNights,\n      numOfGuests,\n      notes,\n    };\n  }\n  const rowData = showData?.data?.map((item, index) => {\n    return createData(\n      index,\n      item.firstName,\n      item.surName,\n      item.email,\n      item.phone,\n      DateAppointView(item.arrivalDate),\n      item.numOfNights,\n      item.numOfGuests,\n      item.notes\n    );\n  });\n  console.log(showData?.data);\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={3}\n        sx={{ marginTop: 5 }}\n      >\n        <Grid item xs={10}>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"baseline\"\n            sx={{ mb: { xs: -0.5, sm: 0.5 } }}\n          >\n            <Typography variant=\"h3\">All Bookings</Typography>\n            <Typography\n              component={Link}\n              to=\"/home\"\n              variant=\"body1\"\n              sx={{ textDecoration: \"none\" }}\n              color=\"primary\"\n            >\n              Log Out\n            </Typography>\n          </Stack>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n            {showData?.data && <CustomTable columns={columns} rows={rowData} />}\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AllBooking;\n"],"names":["AnimateButton","_ref","children","type","_jsx","motion","whileHover","scale","whileTap","defaultProps","fullWidth","title","loading","Box","sx","mt","LoadingButton","loadingPosition","disableElevation","size","variant","columns","rows","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_jsxs","_Fragment","TableContainer","maxHeight","Table","stickyHeader","striped","TableHead","TableRow","map","column","TableCell","align","style","minWidth","label","id","TableBody","slice","row","hover","role","tabIndex","value","format","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","Object","assign","_objectDestructuringEmpty","useNavigate","_showData$data","_useState","useState","_useState2","showData","setShowData","getAllBookings","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","wrap","_context","prev","next","headers","axios","process","then","response","console","log","data","catch","err","stop","apply","arguments","useEffect","rowData","item","index","firstName","surName","email","phone","arrivalDate","date","isoDate","moment","DateAppointView","numOfNights","numOfGuests","notes","Grid","container","alignItems","justifyContent","spacing","marginTop","xs","Stack","direction","mb","sm","Typography","Link","to","textDecoration","color","Paper","width","overflow","CustomTable","toLocaleString"],"sourceRoot":""}